// Package gateway provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package gateway

import (
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Emoji defines model for Emoji.
type Emoji struct {
	Emoji string `json:"emoji"`
}

// Error represents an error returned by the service
type Error struct {
	// Message error message
	Message string `json:"message"`

	// Slug error identifier
	Slug string `json:"slug"`

	// Status HTTP status code
	Status int `json:"status"`
}

// GetPresignedUploadURL defines model for GetPresignedUploadURL.
type GetPresignedUploadURL struct {
	ContentLength int    `json:"contentLength"`
	ContentType   string `json:"contentType"`
	Name          string `json:"name"`
}

// Icon defines model for Icon.
type Icon = Emoji

// Note defines model for Note.
type Note struct {
	Content        string     `json:"content"`
	CreatedTime    time.Time  `json:"createdTime"`
	Date           *time.Time `json:"date,omitempty"`
	ExternalURL    string     `json:"externalURL"`
	Icon           *Icon      `json:"icon,omitempty"`
	LastEditedTime time.Time  `json:"lastEditedTime"`
	Notebook       struct {
		Icon  *Icon              `json:"icon,omitempty"`
		Title string             `json:"title"`
		Uuid  openapi_types.UUID `json:"uuid"`
	} `json:"notebook"`
	Title string             `json:"title"`
	Uuid  openapi_types.UUID `json:"uuid"`
}

// NoteBase defines model for NoteBase.
type NoteBase struct {
	Content     *string    `json:"content,omitempty"`
	Date        *time.Time `json:"date,omitempty"`
	ExternalURL *string    `json:"externalURL,omitempty"`
	Icon        *Icon      `json:"icon,omitempty"`
	Notebook    *struct {
		Uuid *openapi_types.UUID `json:"uuid,omitempty"`
	} `json:"notebook,omitempty"`
	Title *string `json:"title,omitempty"`
}

// Notebook defines model for Notebook.
type Notebook struct {
	CreatedTime    time.Time          `json:"createdTime"`
	Description    string             `json:"description"`
	Icon           *Icon              `json:"icon,omitempty"`
	LastEditedTime time.Time          `json:"lastEditedTime"`
	NotesNumber    int                `json:"notesNumber"`
	Title          string             `json:"title"`
	Uuid           openapi_types.UUID `json:"uuid"`
}

// NotebookBase defines model for NotebookBase.
type NotebookBase struct {
	Description *string `json:"description,omitempty"`
	Icon        *Icon   `json:"icon,omitempty"`
	Title       *string `json:"title,omitempty"`
}

// Notebooks represents a list of notebooks
type Notebooks struct {
	Notebooks []Notebook `json:"notebooks"`
}

// Notes represents a list of notes
type Notes struct {
	Notes []Note `json:"notes"`
}

// PatchNote defines model for PatchNote.
type PatchNote = NoteBase

// PatchNotebook defines model for PatchNotebook.
type PatchNotebook = NotebookBase

// PatchUser defines model for PatchUser.
type PatchUser = UserBase

// PostNote defines model for PostNote.
type PostNote = NoteBase

// PostNotebook defines model for PostNotebook.
type PostNotebook = NotebookBase

// PresignedUploadURL defines model for PresignedUploadURL.
type PresignedUploadURL struct {
	URL        string `json:"URL"`
	PutHeaders *[]struct {
		Name  string `json:"name"`
		Value string `json:"value"`
	} `json:"putHeaders,omitempty"`
	SignedGetURL string `json:"signedGetURL"`
	SignedPutURL string `json:"signedPutURL"`
}

// User defines model for User.
type User struct {
	AvatarURL string `json:"avatarURL"`
	Name      string `json:"name"`
	Role      string `json:"role"`
}

// UserBase defines model for UserBase.
type UserBase struct {
	AvatarURL *string `json:"avatarURL,omitempty"`
}

// NoteID defines model for NoteID.
type NoteID = openapi_types.UUID

// NotebookID defines model for NotebookID.
type NotebookID = openapi_types.UUID

// Page defines model for Page.
type Page = int

// PageSize defines model for PageSize.
type PageSize = int

// Sort defines model for Sort.
type Sort = string

// GetNotebooksParams defines parameters for GetNotebooks.
type GetNotebooksParams struct {
	// Sort represents a sort query parameter
	Sort *Sort `form:"sort,omitempty" json:"sort,omitempty"`

	// PageSize represents a page size query parameter
	PageSize *PageSize `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Page represents an page number query parameter
	Page *Page `form:"page,omitempty" json:"page,omitempty"`
}

// GetNotebookNotesParams defines parameters for GetNotebookNotes.
type GetNotebookNotesParams struct {
	// Sort represents a sort query parameter
	Sort *Sort `form:"sort,omitempty" json:"sort,omitempty"`

	// PageSize represents a page size query parameter
	PageSize *PageSize `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Page represents an page number query parameter
	Page *Page `form:"page,omitempty" json:"page,omitempty"`
}

// GetNotesParams defines parameters for GetNotes.
type GetNotesParams struct {
	// Sort represents a sort query parameter
	Sort *Sort `form:"sort,omitempty" json:"sort,omitempty"`

	// PageSize represents a page size query parameter
	PageSize *PageSize `form:"pageSize,omitempty" json:"pageSize,omitempty"`

	// Page represents an page number query parameter
	Page *Page `form:"page,omitempty" json:"page,omitempty"`
}

// GetPresignedUploadURLJSONRequestBody defines body for GetPresignedUploadURL for application/json ContentType.
type GetPresignedUploadURLJSONRequestBody = GetPresignedUploadURL

// CreateNotebookJSONRequestBody defines body for CreateNotebook for application/json ContentType.
type CreateNotebookJSONRequestBody = PostNotebook

// UpdateNotebookJSONRequestBody defines body for UpdateNotebook for application/json ContentType.
type UpdateNotebookJSONRequestBody = PatchNotebook

// CreateNoteJSONRequestBody defines body for CreateNote for application/json ContentType.
type CreateNoteJSONRequestBody = PostNote

// UpdateNoteJSONRequestBody defines body for UpdateNote for application/json ContentType.
type UpdateNoteJSONRequestBody = PatchNote

// UpdateCurrentUserJSONRequestBody defines body for UpdateCurrentUser for application/json ContentType.
type UpdateCurrentUserJSONRequestBody = PatchUser
